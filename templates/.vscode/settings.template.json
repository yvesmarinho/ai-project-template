{
    // GitHub Copilot AI Assistant Configuration
    "github.copilot.enable": {
        "*": true,
        "yaml": true,
        "plaintext": true,
        "markdown": true
    },
    "github.copilot.chat.enableCodeActions": true,
    "github.copilot.chat.enableInlineChat": true,
    "github.copilot.advanced": {
        "secret_key": "{{copilot_secret}}",
        "length": 500,
        "temperature": 0.1,
        "top_p": 1,
        "stop": [
            "\n\n",
            "\n\r\n",
            "\n\n\n"
        ]
    },
    {
        {#if language
        }
    }
  {
        {#if (eq language "python")
        }
    }
    // Python Development with AI Enhancement
    "python.defaultInterpreterPath": "{{python_path}}",
    "python.terminal.activateEnvironment": true,
    "python.linting.enabled": true,
    "python.linting.pylintEnabled": true,
    "python.linting.flake8Enabled": true,
    "python.formatting.provider": "black",
    "python.formatting.blackArgs": [
        "--line-length=88"
    ],
    "python.sortImports.args": [
        "--profile",
        "black"
    ],
    "python.analysis.autoImportCompletions": true,
    "python.analysis.typeCheckingMode": "{{type_checking_mode}}",
    "python.analysis.extraPaths": [
        "./src",
        "./tests"
    ],
    "python.testing.pytestEnabled": true,
    "python.testing.pytestArgs": [
        "-v",
        "--tb=short"
    ],
    // Enhanced IntelliSense for better AI suggestions
    "python.languageServer": "Pylance",
    "pylance.insidersChannel": "off",
    {
        {#if framework
        }
    }
  {
        {#if (eq framework "fastapi")
        }
    }
    // FastAPI specific AI optimizations
    "python.analysis.include": [
        "src/**/*.py"
    ],
    "files.associations": {
        "*.py": "python"
    },
    // Better Copilot context for FastAPI
    "python.analysis.stubPath": "./typings"{
        {/if
        }
    }
  {
        {#if (eq framework "django")
        }
    }
    // Django AI-enhanced development
    "python.analysis.include": [
        "**/*.py"
    ],
    "emmet.includeLanguages": {
        "django-html": "html"
    },
    "files.associations": {
        "*.html": "django-html"
    }
  {
        {/if
        }
    }
  {
        {#if (eq framework "flask")
        }
    }
    // Flask optimizations for AI assistance
    "python.analysis.include": [
        "**/*.py"
    ]
  {
        {/if
        }
    }
  {
        {/if
        }
    }
  {
        {/if
        }
    }
  
  {
        {#if (eq language "javascript")
        }
    }
    // JavaScript/Node.js AI-Enhanced Development
    "typescript.preferences.quoteStyle": "single",
    "javascript.preferences.quoteStyle": "single",
    "typescript.suggest.autoImports": true,
    "javascript.suggest.autoImports": true,
    "typescript.updateImportsOnFileMove.enabled": "always",
    "javascript.updateImportsOnFileMove.enabled": "always",
    "typescript.preferences.includePackageJsonAutoImports": "on",
    "javascript.preferences.includePackageJsonAutoImports": "on",
    // Enhanced suggestions for AI
    "typescript.suggest.completeFunctionCalls": true,
    "javascript.suggest.completeFunctionCalls": true,
    {
        {#if framework
        }
    }
  {
        {#if (eq framework "react")
        }
    }
    // React + AI optimizations
    "emmet.includeLanguages": {
        "javascript": "javascriptreact",
        "typescript": "typescriptreact"
    },
    "emmet.triggerExpansionOnTab": true,
    "typescript.preferences.jsx": "react-jsx"{
        {/if
        }
    }
  {
        {#if (eq framework "nextjs")
        }
    }
    // Next.js AI enhancements
    "typescript.preferences.includePackageJsonAutoImports": "on",
    "eslint.workingDirectories": [
        "."
    ]
  {
        {/if
        }
    }
  {
        {#if (eq framework "express")
        }
    }
    // Express.js AI optimizations
    "javascript.suggest.names": true
  {
        {/if
        }
    }
  {
        {/if
        }
    }
  {
        {/if
        }
    }
  
  {
        {#if (eq language "typescript")
        }
    }
    // TypeScript AI-Enhanced Development
    "typescript.preferences.quoteStyle": "single",
    "typescript.suggest.autoImports": true,
    "typescript.updateImportsOnFileMove.enabled": "always",
    "typescript.preferences.includePackageJsonAutoImports": "on",
    "typescript.suggest.completeFunctionCalls": true,
    "typescript.inlayHints.parameterNames.enabled": "all",
    "typescript.inlayHints.variableTypes.enabled": true,
    "typescript.inlayHints.functionLikeReturnTypes.enabled": true
  {
        {/if
        }
    }
  
  {
        {#if (eq language "go")
        }
    }
    // Go development with AI
    "go.useLanguageServer": true,
    "go.gocodeAutoBuild": true,
    "go.formatTool": "gofmt",
    "go.lintTool": "golangci-lint",
    "go.testFlags": [
        "-v"
    ],
    "go.coverOnSave": true
  {
        {/if
        }
    }
  
  {
        {#if (eq language "rust")
        }
    }
    // Rust AI-enhanced development
    "rust-analyzer.checkOnSave.command": "cargo check",
    "rust-analyzer.cargo.loadOutDirsFromCheck": true,
    "rust-analyzer.procMacro.enable": true,
    "rust-analyzer.completion.autoimport.enable": true
  {
        {/if
        }
    }
  
  {
        {#if (eq language "java")
        }
    }
    // Java AI development
    "java.configuration.updateBuildConfiguration": "automatic",
    "java.completion.enabled": true,
    "java.completion.guessMethodArguments": true,
    "java.signatureHelp.enabled": true
  {
        {/if
        }
    }
  {
        {/if
        }
    }
    // Enhanced Editor Settings for AI Pair Programming
    "editor.suggestSelection": "first",
    "editor.tabCompletion": "on",
    "editor.wordBasedSuggestions": "matchingDocuments",
    "editor.parameterHints.enabled": true,
    "editor.quickSuggestions": {
        "other": "on",
        "comments": "on",
        "strings": "on"
    },
    "editor.quickSuggestionsDelay": 0,
    // Inline AI suggestions
    "editor.inlineSuggest.enabled": true,
    "editor.inlineSuggest.showToolbar": "onHover",
    "editor.inlineSuggest.suppressSuggestions": false,
    // Code completion enhancements
    "editor.acceptSuggestionOnCommitCharacter": true,
    "editor.acceptSuggestionOnEnter": "on",
    "editor.snippetSuggestions": "top",
    // Bracket pair colorization for better code reading
    "editor.bracketPairColorization.enabled": true,
    "editor.guides.bracketPairs": "active",
    // Auto-formatting for consistent code style
    "editor.formatOnSave": true,
    "editor.formatOnPaste": true,
    "editor.formatOnType": true,
    "editor.codeActionsOnSave": {
        "source.organizeImports": "explicit",
        "source.fixAll": "explicit",
        "source.fixAll.eslint": "explicit"
    },
    // Git integration for better context
    "git.enableSmartCommit": true,
    "git.confirmSync": false,
    "git.autofetch": true,
    "git.openRepositoryInParentFolders": "always",
    // File watcher optimizations
    "files.watcherExclude": {
        "**/.git/objects/**": true,
        "**/.git/subtree-cache/**": true,
        "**/node_modules/**": true,
        "**/__pycache__/**": true,
        "**/venv/**": true,
        "**/.venv/**": true,
        "**/dist/**": true,
        "**/build/**": true,
        "**/.versions/**": true
    },
    // Performance optimizations for large projects
    "files.exclude": {
        "**/.git": true,
        "**/.DS_Store": true,
        "**/Thumbs.db": true,
        "**/__pycache__": true,
        "**/*.pyc": true,
        "**/node_modules": true,
        "**/dist": true,
        "**/build": true,
        "**/.versions": true,
        "**/coverage": true,
        "**/.pytest_cache": true,
        "**/.coverage": true
    },
    // Search configuration for better AI context
    "search.exclude": {
        "**/node_modules": true,
        "**/bower_components": true,
        "**/*.code-search": true,
        "**/__pycache__": true,
        "**/venv": true,
        "**/.venv": true,
        "**/dist": true,
        "**/build": true,
        "**/.versions": true,
        "**/coverage": true
    },
    // Terminal enhancements
    "terminal.integrated.enableMultiLinePasteWarning": false,
    "terminal.integrated.copyOnSelection": true,
    "terminal.integrated.rightClickBehavior": "copyPaste",
    // AI-specific UI enhancements
    "workbench.colorTheme": "{{preferred_theme}}",
    "workbench.iconTheme": "material-icon-theme",
    "workbench.editor.enablePreview": false,
    "workbench.editor.closeOnFileDelete": true,
    // Security settings
    "security.workspace.trust.untrustedFiles": "open",
    "security.workspace.trust.banner": "never",
    // Extension-specific AI enhancements
    "tabnine.experimentalAutoImports": true,
    "vsicons.dontShowNewVersionMessage": true,
    // Copilot Chat specific settings
    "github.copilot.chat.localeOverride": "{{locale}}",
    "github.copilot.chat.welcomeMessage": "always"
}